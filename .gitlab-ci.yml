image:
  name: docker/compose:1.25.0 # https://github.com/docker/compose/blob/master/Dockerfile
  entrypoint: ["/bin/sh", "-c"]

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: none
  COMPOSE_HTTP_TIMEOUT: 120
  COMPOSE_PROJECT_NAME: "app_${CI_JOB_ID}"

before_script:
  - command -v docker > /dev/null 2>&1 && docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - test -f docker-compose.override.ci.yml.dist && cp docker-compose.override.ci.yml.dist docker-compose.override.yml

stages:
  - prepare
  - test
  - build
  - deploy

prepare:
  stage: prepare
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/php-flex-dev:latest || true
    - docker build --pull -t ${CI_REGISTRY_IMAGE}/php-flex-dev:latest --cache-from ${CI_REGISTRY_IMAGE}/php-flex-dev:latest -f docker/php-flex/Dockerfile --target withoutsources .
    - docker push ${CI_REGISTRY_IMAGE}/php-flex-dev:latest
  when: manual

test:
  stage: test
  variables:
    ENV_PREFIX: test_${CI_COMMIT_REF_SLUG}
  before_script:
    - command -v docker > /dev/null 2>&1 && docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - test -f docker-compose.override.ci.yml.dist && cp docker-compose.override.ci.yml.dist docker-compose.override.yml
    - apk add --no-cache make
    - docker pull ${CI_REGISTRY_IMAGE}/php-flex-dev:latest || true
    - bin/tools composer install -q -n --profile --ignore-platform-reqs --no-scripts --no-suggest --prefer-dist --apcu-autoloader
    - bin/node-tools yarn install --pure-lockfile
  script:
    # Compiled assets files are required for functional tests. TODO Make it optional
    - make webpack-build-prod
    - make test-cs
    - make test-advanced
    - docker-compose up -d postgres
    - bin/tools bin/post-install-dev.sh
    - make test-unit-coverage
  except:
    - tags

build:
  stage: build
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/php-flex-dev:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/fpm:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/nginx:latest || true
    - docker build -t ${CI_REGISTRY_IMAGE}/fpm:${CI_COMMIT_REF_SLUG} -t ${CI_REGISTRY_IMAGE}/fpm:latest --cache-from ${CI_REGISTRY_IMAGE}/php-flex-dev:latest --cache-from ${CI_REGISTRY_IMAGE}/fpm:latest -f docker/php-flex/Dockerfile --target withsources-fpm .
    - docker run --rm -v $(pwd):/host ${CI_REGISTRY_IMAGE}/fpm:latest mv -f /srv/public/build /host/public
    - docker build -t ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_REF_SLUG} -t ${CI_REGISTRY_IMAGE}/nginx:latest --cache-from ${CI_REGISTRY_IMAGE}/nginx:latest -f docker/nginx/Dockerfile --target withsources .
    - docker push ${CI_REGISTRY_IMAGE}/fpm:${CI_COMMIT_REF_SLUG}
    - docker push ${CI_REGISTRY_IMAGE}/fpm:latest
    - docker push ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_REF_SLUG}
    - docker push ${CI_REGISTRY_IMAGE}/nginx:latest
    - echo "Tag => $CI_COMMIT_TAG"
    - (test -n "$CI_COMMIT_TAG" && docker tag ${CI_REGISTRY_IMAGE}/fpm:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY_IMAGE}/fpm:release-latest && docker push ${CI_REGISTRY_IMAGE}/fpm:release-latest) || true
    - (test -n "$CI_COMMIT_TAG" && docker tag ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY_IMAGE}/nginx:release-latest && docker push ${CI_REGISTRY_IMAGE}/nginx:release-latest) || true
  only:
    - master
    - tags

deploy:snapshot:
  stage: deploy
  variables:
    GIT_STRATEGY: fetch
  dependencies: []
  script:
    - apk add --no-cache curl
    - curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master https://gitlab.com/api/v4/projects/7280731/trigger/pipeline
  only:
    - master
